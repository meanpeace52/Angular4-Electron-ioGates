"use strict"; /* istanbul ignore next */var cov_2oqqgoa44p = function () {var path = "/code/cilantro/iogates-transfer/src/commands/download.ts",hash = "4f08907b7a767555e8fc78d583247e5ccd34db51",global = new Function('return this')(),gcv = "__coverage__",coverageData = { path: "/code/cilantro/iogates-transfer/src/commands/download.ts", statementMap: { "0": { start: { line: 2, column: 0 }, end: { line: 2, column: 62 } }, "1": { start: { line: 3, column: 16 }, end: { line: 3, column: 39 } }, "2": { start: { line: 4, column: 18 }, end: { line: 4, column: 43 } }, "3": { start: { line: 5, column: 21 }, end: { line: 5, column: 49 } }, "4": { start: { line: 6, column: 20 }, end: { line: 6, column: 47 } }, "5": { start: { line: 7, column: 16 }, end: { line: 7, column: 32 } }, "6": { start: { line: 8, column: 12 }, end: { line: 8, column: 50 } }, "7": { start: { line: 10, column: 24 }, end: { line: 10, column: 32 } }, "8": { start: { line: 11, column: 21 }, end: { line: 11, column: 29 } }, "9": { start: { line: 12, column: 23 }, end: { line: 12, column: 52 } }, "10": { start: { line: 13, column: 19 }, end: { line: 13, column: 42 } }, "11": { start: { line: 14, column: 22 }, end: { line: 14, column: 60 } }, "12": { start: { line: 15, column: 4 }, end: { line: 15, column: 30 } }, "13": { start: { line: 16, column: 4 }, end: { line: 51, column: 7 } }, "14": { start: { line: 19, column: 8 }, end: { line: 19, column: 36 } }, "15": { start: { line: 20, column: 8 }, end: { line: 20, column: 59 } }, "16": { start: { line: 23, column: 8 }, end: { line: 23, column: 67 } }, "17": { start: { line: 24, column: 8 }, end: { line: 26, column: 9 } }, "18": { start: { line: 27, column: 8 }, end: { line: 27, column: 49 } }, "19": { start: { line: 30, column: 8 }, end: { line: 30, column: 39 } }, "20": { start: { line: 31, column: 8 }, end: { line: 31, column: 28 } }, "21": { start: { line: 34, column: 8 }, end: { line: 34, column: 36 } }, "22": { start: { line: 35, column: 8 }, end: { line: 35, column: 34 } }, "23": { start: { line: 38, column: 8 }, end: { line: 38, column: 40 } }, "24": { start: { line: 40, column: 8 }, end: { line: 40, column: 69 } }, "25": { start: { line: 43, column: 8 }, end: { line: 43, column: 50 } }, "26": { start: { line: 44, column: 8 }, end: { line: 46, column: 11 } }, "27": { start: { line: 45, column: 12 }, end: { line: 45, column: 102 } }, "28": { start: { line: 47, column: 8 }, end: { line: 47, column: 30 } }, "29": { start: { line: 50, column: 8 }, end: { line: 50, column: 23 } }, "30": { start: { line: 53, column: 0 }, end: { line: 53, column: 40 } } }, fnMap: { "0": { name: "downloadComand", decl: { start: { line: 9, column: 9 }, end: { line: 9, column: 23 } }, loc: { start: { line: 9, column: 36 }, end: { line: 52, column: 1 } }, line: 9 }, "1": { name: "(anonymous_1)", decl: { start: { line: 18, column: 14 }, end: { line: 18, column: 15 } }, loc: { start: { line: 18, column: 20 }, end: { line: 21, column: 5 } }, line: 18 }, "2": { name: "(anonymous_2)", decl: { start: { line: 22, column: 14 }, end: { line: 22, column: 15 } }, loc: { start: { line: 22, column: 25 }, end: { line: 28, column: 5 } }, line: 22 }, "3": { name: "(anonymous_3)", decl: { start: { line: 29, column: 14 }, end: { line: 29, column: 15 } }, loc: { start: { line: 29, column: 25 }, end: { line: 32, column: 5 } }, line: 29 }, "4": { name: "(anonymous_4)", decl: { start: { line: 33, column: 14 }, end: { line: 33, column: 15 } }, loc: { start: { line: 33, column: 20 }, end: { line: 36, column: 5 } }, line: 33 }, "5": { name: "(anonymous_5)", decl: { start: { line: 37, column: 14 }, end: { line: 37, column: 15 } }, loc: { start: { line: 37, column: 28 }, end: { line: 41, column: 5 } }, line: 37 }, "6": { name: "(anonymous_6)", decl: { start: { line: 42, column: 14 }, end: { line: 42, column: 15 } }, loc: { start: { line: 42, column: 29 }, end: { line: 48, column: 5 } }, line: 42 }, "7": { name: "(anonymous_7)", decl: { start: { line: 44, column: 26 }, end: { line: 44, column: 27 } }, loc: { start: { line: 44, column: 40 }, end: { line: 46, column: 9 } }, line: 44 }, "8": { name: "(anonymous_8)", decl: { start: { line: 49, column: 15 }, end: { line: 49, column: 16 } }, loc: { start: { line: 49, column: 22 }, end: { line: 51, column: 5 } }, line: 49 } }, branchMap: { "0": { loc: { start: { line: 24, column: 8 }, end: { line: 26, column: 9 } }, type: "if", locations: [{ start: { line: 24, column: 8 }, end: { line: 26, column: 9 } }, { start: { line: 24, column: 8 }, end: { line: 26, column: 9 } }], line: 24 } }, s: { "0": 0, "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 0, "9": 0, "10": 0, "11": 0, "12": 0, "13": 0, "14": 0, "15": 0, "16": 0, "17": 0, "18": 0, "19": 0, "20": 0, "21": 0, "22": 0, "23": 0, "24": 0, "25": 0, "26": 0, "27": 0, "28": 0, "29": 0, "30": 0 }, f: { "0": 0, "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 0 }, b: { "0": [0, 0] }, _coverageSchema: "332fd63041d2c1bcb487cc26dd0d5f7d97098a6c" },coverage = global[gcv] || (global[gcv] = {});if (coverage[path] && coverage[path].hash === hash) {return coverage[path];}coverageData.hash = hash;return coverage[path] = coverageData;}();++cov_2oqqgoa44p.s[0];
Object.defineProperty(exports, "__esModule", { value: true });
const types_1 = /* istanbul ignore next */(++cov_2oqqgoa44p.s[1], require("../lib/types"));
const iogates_1 = /* istanbul ignore next */(++cov_2oqqgoa44p.s[2], require("../lib/iogates"));
const downloader_1 = /* istanbul ignore next */(++cov_2oqqgoa44p.s[3], require("../lib/downloader"));
const directory_1 = /* istanbul ignore next */(++cov_2oqqgoa44p.s[4], require("../lib/directory"));
const debug_1 = /* istanbul ignore next */(++cov_2oqqgoa44p.s[5], require("debug"));
const log = /* istanbul ignore next */(++cov_2oqqgoa44p.s[6], debug_1.default('io:command:download'));
function downloadComand(args, done) {/* istanbul ignore next */++cov_2oqqgoa44p.f[0];
    const destination = /* istanbul ignore next */(++cov_2oqqgoa44p.s[7], args.dir);
    const shareUrl = /* istanbul ignore next */(++cov_2oqqgoa44p.s[8], args.url);
    const downloader = /* istanbul ignore next */(++cov_2oqqgoa44p.s[9], new downloader_1.Downloader());
    const ioGate = /* istanbul ignore next */(++cov_2oqqgoa44p.s[10], new iogates_1.IOGates());
    const directory = /* istanbul ignore next */(++cov_2oqqgoa44p.s[11], new directory_1.Directory(destination)); /* istanbul ignore next */++cov_2oqqgoa44p.s[12];
    log('executing download'); /* istanbul ignore next */++cov_2oqqgoa44p.s[13];
    directory.
    create().
    then(() => {/* istanbul ignore next */++cov_2oqqgoa44p.f[1];++cov_2oqqgoa44p.s[14];
        log(destination, 'created'); /* istanbul ignore next */++cov_2oqqgoa44p.s[15];
        return types_1.Share.LOOKUP(shareUrl, destination);
    }).
    then(share => {/* istanbul ignore next */++cov_2oqqgoa44p.f[2];++cov_2oqqgoa44p.s[16];
        log('share created: ', share.id, '(', share.complete, ')'); /* istanbul ignore next */++cov_2oqqgoa44p.s[17];
        if (share.complete) {
            // completed share.
            /* istanbul ignore next */++cov_2oqqgoa44p.b[0][0];} else /* istanbul ignore next */{++cov_2oqqgoa44p.b[0][1];}++cov_2oqqgoa44p.s[18];
        return ioGate.authenticateFromUrl(share);
    }).
    then(share => {/* istanbul ignore next */++cov_2oqqgoa44p.f[3];++cov_2oqqgoa44p.s[19];
        log('share saved after auth.'); /* istanbul ignore next */++cov_2oqqgoa44p.s[20];
        return share.save(); // updated w/ token and stuff.
    }).
    then(() => {/* istanbul ignore next */++cov_2oqqgoa44p.f[4];++cov_2oqqgoa44p.s[21];
        log('going to read files.'); /* istanbul ignore next */++cov_2oqqgoa44p.s[22];
        return ioGate.readFiles();
    }).
    then(response => {/* istanbul ignore next */++cov_2oqqgoa44p.f[5];++cov_2oqqgoa44p.s[23];
        log('going to download files.');
        // check which files to download.
        /* istanbul ignore next */++cov_2oqqgoa44p.s[24];return downloader.downloadFiles(response.files, destination);
    }).
    then(responses => {/* istanbul ignore next */++cov_2oqqgoa44p.f[6];++cov_2oqqgoa44p.s[25];
        log('Uploaded files: ', responses.length); /* istanbul ignore next */++cov_2oqqgoa44p.s[26];
        responses.forEach(response => {/* istanbul ignore next */++cov_2oqqgoa44p.f[7];++cov_2oqqgoa44p.s[27];
            console.log('Success(', response.success, '): ', response.file.name, '->', response.dest);
        }); /* istanbul ignore next */++cov_2oqqgoa44p.s[28];
        done(null, responses);
    }).
    catch(e => {/* istanbul ignore next */++cov_2oqqgoa44p.f[8];++cov_2oqqgoa44p.s[29];
        console.log(e);
    });
} /* istanbul ignore next */++cov_2oqqgoa44p.s[30];
exports.downloadComand = downloadComand;
//# sourceMappingURL=download.js.map