"use strict"; /* istanbul ignore next */var cov_2cqn5mmo0p = function () {var path = "/code/cilantro/iogates-transfer/src/main.ts",hash = "a8b4988941a3d6b6171c75d17374a7bcfd8f0e64",global = new Function('return this')(),gcv = "__coverage__",coverageData = { path: "/code/cilantro/iogates-transfer/src/main.ts", statementMap: { "0": { start: { line: 2, column: 0 }, end: { line: 2, column: 62 } }, "1": { start: { line: 3, column: 15 }, end: { line: 3, column: 32 } }, "2": { start: { line: 4, column: 19 }, end: { line: 4, column: 49 } }, "3": { start: { line: 5, column: 0 }, end: { line: 5, column: 28 } }, "4": { start: { line: 6, column: 0 }, end: { line: 10, column: 39 } }, "5": { start: { line: 11, column: 0 }, end: { line: 14, column: 25 } }, "6": { start: { line: 15, column: 0 }, end: { line: 15, column: 24 } } }, fnMap: {}, branchMap: {}, s: { "0": 0, "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0 }, f: {}, b: {}, _coverageSchema: "332fd63041d2c1bcb487cc26dd0d5f7d97098a6c" },coverage = global[gcv] || (global[gcv] = {});if (coverage[path] && coverage[path].hash === hash) {return coverage[path];}coverageData.hash = hash;return coverage[path] = coverageData;}();++cov_2cqn5mmo0p.s[0];
Object.defineProperty(exports, "__esModule", { value: true });
const vorpal = /* istanbul ignore next */(++cov_2cqn5mmo0p.s[1], require("vorpal"));
const download_1 = /* istanbul ignore next */(++cov_2cqn5mmo0p.s[2], require("./commands/download")); /* istanbul ignore next */++cov_2cqn5mmo0p.s[3];
console.log('--->', vorpal); /* istanbul ignore next */++cov_2cqn5mmo0p.s[4];
vorpal.
command('download [url...]', 'Download folder from Share URL').
option('-o').
option('--monitor').
action(download_1.downloadComand); /* istanbul ignore next */++cov_2cqn5mmo0p.s[5];
vorpal.
delimiter('iogates:').
show().
parse(process.argv); /* istanbul ignore next */++cov_2cqn5mmo0p.s[6];
module.exports = vorpal;
//# sourceMappingURL=main.js.map