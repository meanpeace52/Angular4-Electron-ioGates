"use strict"; /* istanbul ignore next */var cov_2oqqgoa44p = function () {var path = "/code/cilantro/iogates-transfer/src/commands/download.ts",hash = "a6e7549b8a3c9f41f140add692ef91f361134e91",global = new Function('return this')(),gcv = "__coverage__",coverageData = { path: "/code/cilantro/iogates-transfer/src/commands/download.ts", statementMap: { "0": { start: { line: 2, column: 0 }, end: { line: 2, column: 62 } }, "1": { start: { line: 3, column: 18 }, end: { line: 3, column: 43 } }, "2": { start: { line: 4, column: 21 }, end: { line: 4, column: 49 } }, "3": { start: { line: 6, column: 24 }, end: { line: 6, column: 32 } }, "4": { start: { line: 7, column: 21 }, end: { line: 7, column: 29 } }, "5": { start: { line: 8, column: 23 }, end: { line: 8, column: 52 } }, "6": { start: { line: 9, column: 19 }, end: { line: 9, column: 42 } }, "7": { start: { line: 10, column: 4 }, end: { line: 26, column: 7 } }, "8": { start: { line: 13, column: 8 }, end: { line: 13, column: 34 } }, "9": { start: { line: 16, column: 8 }, end: { line: 16, column: 69 } }, "10": { start: { line: 19, column: 8 }, end: { line: 21, column: 11 } }, "11": { start: { line: 20, column: 12 }, end: { line: 20, column: 99 } }, "12": { start: { line: 22, column: 8 }, end: { line: 22, column: 30 } }, "13": { start: { line: 25, column: 8 }, end: { line: 25, column: 23 } }, "14": { start: { line: 28, column: 0 }, end: { line: 28, column: 40 } } }, fnMap: { "0": { name: "downloadComand", decl: { start: { line: 5, column: 9 }, end: { line: 5, column: 23 } }, loc: { start: { line: 5, column: 36 }, end: { line: 27, column: 1 } }, line: 5 }, "1": { name: "(anonymous_1)", decl: { start: { line: 12, column: 14 }, end: { line: 12, column: 15 } }, loc: { start: { line: 12, column: 20 }, end: { line: 14, column: 5 } }, line: 12 }, "2": { name: "(anonymous_2)", decl: { start: { line: 15, column: 14 }, end: { line: 15, column: 15 } }, loc: { start: { line: 15, column: 28 }, end: { line: 17, column: 5 } }, line: 15 }, "3": { name: "(anonymous_3)", decl: { start: { line: 18, column: 14 }, end: { line: 18, column: 15 } }, loc: { start: { line: 18, column: 29 }, end: { line: 23, column: 5 } }, line: 18 }, "4": { name: "(anonymous_4)", decl: { start: { line: 19, column: 26 }, end: { line: 19, column: 27 } }, loc: { start: { line: 19, column: 40 }, end: { line: 21, column: 9 } }, line: 19 }, "5": { name: "(anonymous_5)", decl: { start: { line: 24, column: 15 }, end: { line: 24, column: 16 } }, loc: { start: { line: 24, column: 22 }, end: { line: 26, column: 5 } }, line: 24 } }, branchMap: {}, s: { "0": 0, "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 0, "9": 0, "10": 0, "11": 0, "12": 0, "13": 0, "14": 0 }, f: { "0": 0, "1": 0, "2": 0, "3": 0, "4": 0, "5": 0 }, b: {}, _coverageSchema: "332fd63041d2c1bcb487cc26dd0d5f7d97098a6c" },coverage = global[gcv] || (global[gcv] = {});if (coverage[path] && coverage[path].hash === hash) {return coverage[path];}coverageData.hash = hash;return coverage[path] = coverageData;}();++cov_2oqqgoa44p.s[0];
Object.defineProperty(exports, "__esModule", { value: true });
const iogates_1 = /* istanbul ignore next */(++cov_2oqqgoa44p.s[1], require("../lib/iogates"));
const downloader_1 = /* istanbul ignore next */(++cov_2oqqgoa44p.s[2], require("../lib/downloader"));
function downloadComand(args, done) {/* istanbul ignore next */++cov_2oqqgoa44p.f[0];
    const destination = /* istanbul ignore next */(++cov_2oqqgoa44p.s[3], args.dir);
    const shareUrl = /* istanbul ignore next */(++cov_2oqqgoa44p.s[4], args.url);
    const downloader = /* istanbul ignore next */(++cov_2oqqgoa44p.s[5], new downloader_1.Downloader());
    const ioGate = /* istanbul ignore next */(++cov_2oqqgoa44p.s[6], new iogates_1.IOGates()); /* istanbul ignore next */++cov_2oqqgoa44p.s[7];
    ioGate.
    authenticateFromUrl(shareUrl).
    then(() => {/* istanbul ignore next */++cov_2oqqgoa44p.f[1];++cov_2oqqgoa44p.s[8];
        return ioGate.readFiles();
    }).
    then(response => {/* istanbul ignore next */++cov_2oqqgoa44p.f[2];++cov_2oqqgoa44p.s[9];
        return downloader.downloadFiles(response.files, destination);
    }).
    then(responses => {/* istanbul ignore next */++cov_2oqqgoa44p.f[3];++cov_2oqqgoa44p.s[10];
        responses.forEach(response => {/* istanbul ignore next */++cov_2oqqgoa44p.f[4];++cov_2oqqgoa44p.s[11];
            console.log(`Success(${response.success}): ${response.file.name} -> ${response.dest}`);
        }); /* istanbul ignore next */++cov_2oqqgoa44p.s[12];
        done(null, responses);
    }).
    catch(e => {/* istanbul ignore next */++cov_2oqqgoa44p.f[5];++cov_2oqqgoa44p.s[13];
        console.log(e);
    });
} /* istanbul ignore next */++cov_2oqqgoa44p.s[14];
exports.downloadComand = downloadComand;
//# sourceMappingURL=download.js.map