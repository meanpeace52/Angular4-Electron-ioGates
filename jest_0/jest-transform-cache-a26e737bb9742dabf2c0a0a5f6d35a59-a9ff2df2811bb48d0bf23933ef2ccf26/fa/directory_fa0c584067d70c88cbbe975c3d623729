"use strict"; /* istanbul ignore next */var cov_1mzemwzt0x = function () {var path = "/code/cilantro/iogates-transfer/src/lib/directory.ts",hash = "085b03e1f958c4a9bb1f99e20e017d9937705f14",global = new Function('return this')(),gcv = "__coverage__",coverageData = { path: "/code/cilantro/iogates-transfer/src/lib/directory.ts", statementMap: { "0": { start: { line: 2, column: 0 }, end: { line: 2, column: 62 } }, "1": { start: { line: 3, column: 11 }, end: { line: 3, column: 24 } }, "2": { start: { line: 9, column: 8 }, end: { line: 9, column: 25 } }, "3": { start: { line: 12, column: 8 }, end: { line: 21, column: 11 } }, "4": { start: { line: 13, column: 12 }, end: { line: 13, column: 53 } }, "5": { start: { line: 14, column: 12 }, end: { line: 20, column: 15 } }, "6": { start: { line: 15, column: 16 }, end: { line: 17, column: 17 } }, "7": { start: { line: 16, column: 20 }, end: { line: 16, column: 39 } }, "8": { start: { line: 18, column: 16 }, end: { line: 18, column: 56 } }, "9": { start: { line: 19, column: 16 }, end: { line: 19, column: 37 } }, "10": { start: { line: 24, column: 0 }, end: { line: 24, column: 30 } } }, fnMap: { "0": { name: "(anonymous_0)", decl: { start: { line: 8, column: 4 }, end: { line: 8, column: 5 } }, loc: { start: { line: 8, column: 22 }, end: { line: 10, column: 5 } }, line: 8 }, "1": { name: "(anonymous_1)", decl: { start: { line: 11, column: 4 }, end: { line: 11, column: 5 } }, loc: { start: { line: 11, column: 13 }, end: { line: 22, column: 5 } }, line: 11 }, "2": { name: "(anonymous_2)", decl: { start: { line: 12, column: 27 }, end: { line: 12, column: 28 } }, loc: { start: { line: 12, column: 48 }, end: { line: 21, column: 9 } }, line: 12 }, "3": { name: "(anonymous_3)", decl: { start: { line: 14, column: 32 }, end: { line: 14, column: 33 } }, loc: { start: { line: 14, column: 41 }, end: { line: 20, column: 13 } }, line: 14 } }, branchMap: { "0": { loc: { start: { line: 15, column: 16 }, end: { line: 17, column: 17 } }, type: "if", locations: [{ start: { line: 15, column: 16 }, end: { line: 17, column: 17 } }, { start: { line: 15, column: 16 }, end: { line: 17, column: 17 } }], line: 15 } }, s: { "0": 0, "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 0, "9": 0, "10": 0 }, f: { "0": 0, "1": 0, "2": 0, "3": 0 }, b: { "0": [0, 0] }, _coverageSchema: "332fd63041d2c1bcb487cc26dd0d5f7d97098a6c" },coverage = global[gcv] || (global[gcv] = {});if (coverage[path] && coverage[path].hash === hash) {return coverage[path];}coverageData.hash = hash;return coverage[path] = coverageData;}();++cov_1mzemwzt0x.s[0];
Object.defineProperty(exports, "__esModule", { value: true });
const fs = /* istanbul ignore next */(++cov_1mzemwzt0x.s[1], require("fs"));
/**
                                                                              *  Exports class Directory.
                                                                              */
class Directory {
    constructor(path) {/* istanbul ignore next */++cov_1mzemwzt0x.f[0];++cov_1mzemwzt0x.s[2];
        this.path = path;
    }
    create() {/* istanbul ignore next */++cov_1mzemwzt0x.f[1];++cov_1mzemwzt0x.s[3];
        return new Promise((resolve, reject) => {/* istanbul ignore next */++cov_1mzemwzt0x.f[2];++cov_1mzemwzt0x.s[4];
            console.log('Creating dir: ', this.path); /* istanbul ignore next */++cov_1mzemwzt0x.s[5];
            fs.mkdir(this.path, err => {/* istanbul ignore next */++cov_1mzemwzt0x.f[3];++cov_1mzemwzt0x.s[6];
                if (err instanceof Error) {/* istanbul ignore next */++cov_1mzemwzt0x.b[0][0];++cov_1mzemwzt0x.s[7];
                    return reject(err);
                } else /* istanbul ignore next */{++cov_1mzemwzt0x.b[0][1];}++cov_1mzemwzt0x.s[8];
                console.log('created dir: ', this.path); /* istanbul ignore next */++cov_1mzemwzt0x.s[9];
                return resolve(null);
            });
        });
    }} /* istanbul ignore next */++cov_1mzemwzt0x.s[10];

exports.Directory = Directory;
//# sourceMappingURL=directory.js.map