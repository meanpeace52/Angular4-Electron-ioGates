"use strict"; /* istanbul ignore next */var cov_2cqn5mmo0p = function () {var path = "/code/cilantro/iogates-transfer/src/main.ts",hash = "ff51a56230279d171d457cb95fd9769b98e48330",global = new Function('return this')(),gcv = "__coverage__",coverageData = { path: "/code/cilantro/iogates-transfer/src/main.ts", statementMap: { "0": { start: { line: 2, column: 0 }, end: { line: 2, column: 62 } }, "1": { start: { line: 3, column: 16 }, end: { line: 3, column: 32 } }, "2": { start: { line: 12, column: 4 }, end: { line: 12, column: 88 } }, "3": { start: { line: 12, column: 36 }, end: { line: 12, column: 86 } }, "4": { start: { line: 12, column: 53 }, end: { line: 12, column: 78 } }, "5": { start: { line: 17, column: 4 }, end: { line: 19, column: 7 } }, "6": { start: { line: 18, column: 8 }, end: { line: 18, column: 40 } }, "7": { start: { line: 21, column: 0 }, end: { line: 21, column: 26 } } }, fnMap: { "0": { name: "delayedHello", decl: { start: { line: 11, column: 9 }, end: { line: 11, column: 21 } }, loc: { start: { line: 11, column: 42 }, end: { line: 13, column: 1 } }, line: 11 }, "1": { name: "(anonymous_1)", decl: { start: { line: 12, column: 23 }, end: { line: 12, column: 24 } }, loc: { start: { line: 12, column: 36 }, end: { line: 12, column: 86 } }, line: 12 }, "2": { name: "(anonymous_2)", decl: { start: { line: 12, column: 47 }, end: { line: 12, column: 48 } }, loc: { start: { line: 12, column: 53 }, end: { line: 12, column: 78 } }, line: 12 }, "3": { name: "greeter", decl: { start: { line: 16, column: 9 }, end: { line: 16, column: 16 } }, loc: { start: { line: 16, column: 23 }, end: { line: 20, column: 1 } }, line: 16 }, "4": { name: "(anonymous_4)", decl: { start: { line: 17, column: 51 }, end: { line: 17, column: 52 } }, loc: { start: { line: 17, column: 64 }, end: { line: 19, column: 5 } }, line: 17 } }, branchMap: { "0": { loc: { start: { line: 11, column: 28 }, end: { line: 11, column: 40 } }, type: "default-arg", locations: [{ start: { line: 11, column: 36 }, end: { line: 11, column: 40 } }], line: 11 } }, s: { "0": 0, "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0 }, f: { "0": 0, "1": 0, "2": 0, "3": 0, "4": 0 }, b: { "0": [0] }, _coverageSchema: "332fd63041d2c1bcb487cc26dd0d5f7d97098a6c" },coverage = global[gcv] || (global[gcv] = {});if (coverage[path] && coverage[path].hash === hash) {return coverage[path];}coverageData.hash = hash;return coverage[path] = coverageData;}();++cov_2cqn5mmo0p.s[0];
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = /* istanbul ignore next */(++cov_2cqn5mmo0p.s[1], require("tslib"));
/**
                                                                                      * Returns a Promise<string> that resolves after given time.
                                                                                      *
                                                                                      * @param {string} name - Somebody's name
                                                                                      * @param {number=} [delay=2000] - Number of milliseconds to delay resolution.
                                                                                      * @returns {Promise<string>}
                                                                                      */
function delayedHello(name, delay = /* istanbul ignore next */(++cov_2cqn5mmo0p.b[0][0], 2000)) {/* istanbul ignore next */++cov_2cqn5mmo0p.f[0];++cov_2cqn5mmo0p.s[2];
    return new Promise(resolve => {/* istanbul ignore next */++cov_2cqn5mmo0p.f[1];++cov_2cqn5mmo0p.s[3];return setTimeout(() => {/* istanbul ignore next */++cov_2cqn5mmo0p.f[2];++cov_2cqn5mmo0p.s[4];return resolve(`Hello, ${name}`);}, delay);});
}
// Below is an example of using TSLint errors suppression
// Here it's supressing missing type definitions for greeter function
function greeter(name) {/* istanbul ignore next */++cov_2cqn5mmo0p.f[3];++cov_2cqn5mmo0p.s[5];
    return tslib_1.__awaiter(this, void 0, void 0, function* () {/* istanbul ignore next */++cov_2cqn5mmo0p.f[4];++cov_2cqn5mmo0p.s[6];
        return yield delayedHello(name); // tslint:disable-line no-unsafe-any
    });
} /* istanbul ignore next */++cov_2cqn5mmo0p.s[7];
exports.greeter = greeter;
//# sourceMappingURL=main.js.map